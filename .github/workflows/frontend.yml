name: Frontend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    defaults:
      run:
        working-directory: ./front-end-app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Manage NPM Dependencies
        uses: ./.github/actions/cache-node-dependencies
        with:
          app-name: "react-app"
          working-directory: "./front-end-app"

      - name: Build
        run: npm run build

      - name: Lint
        run: npm run ci:lint

      - name: Test
        run: npm run ci:test

      - name: SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: front-end-app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3 # Utilizamos la acci칩n de login de docker del marketplace
        with:
          registry: ghcr.io # a침adimos Github como registry de docker
          username: ${{ github.actor }} # El usuario de Github
          password: ${{ secrets.GITHUB_TOKEN }} # El token de Github que ya viene por defecto en los secrets
      - name: Build
        uses: docker/build-push-action@v5 # Utilizamos la acci칩n de build y push de docker del marketplace. Esto hace el docker build y el docker push por debajo
        with:
          context: .
          push: true
          tags: ${{ github.actor }}/ci-cd-example-front:latest # A침adimos el tag de la imagen
